mean=mean(alignment),
sd=sd(alignment)
) %>%
mutate( se=sd/sqrt(n))  %>%
mutate( ic=se * qt((1-0.05)/2 + .5, n-1))
# Standard deviation
ggplot(alignmentNewsComments) +
geom_bar( aes(x=number_comment, y=mean), stat="identity", fill="forestgreen", alpha=0.5) +
geom_errorbar( aes(x=number_comment, ymin=mean-sd, ymax=mean+sd), width=0.4, colour="orange", alpha=0.9, size=1.5) +
ggtitle("using standard deviation")
# Standard Error
ggplot(alignmentNewsComments) +
geom_bar( aes(x=number_comment, y=mean), stat="identity", fill="forestgreen", alpha=0.5) +
geom_errorbar( aes(x=number_comment, ymin=mean-se, ymax=mean+se), width=0.4, colour="orange", alpha=0.9, size=1.5) +
ggtitle("using standard error")
alignmentNewsComments <- mongo("alignmentNewsComments", url = HOST_IP)$find() %>%
filter(!is.infinite(alignment)) %>% filter(number_comment < 2) %>%
drop_na()
alignmentNewsComments <- mongo("alignmentNewsComments", url = HOST_IP)$find() %>%
filter(!is.infinite(alignment)) %>% filter(number_comment < 3) %>%
drop_na()
alignmentNewsComments <- mongo("alignmentNewsComments", url = HOST_IP)$find() %>%
filter(!is.infinite(alignment)) %>% filter(number_comment < 11) %>%
drop_na()
plot(alignmentNewsComments$number_comment, alignmentNewsComments$alignment,
main = "Alignment between News and Comments",
xlab = "number comment", ylab = "alignment",
pch = 19, frame = FALSE)
# Calculates mean, sd, se and IC
alignmentNewsComments <- alignmentNewsComments %>%
dplyr::group_by(number_comment) %>%
dplyr::mutate(
n=n(),
mean=mean(alignment),
sd=sd(alignment)
) %>%
mutate( se=sd/sqrt(n))  %>%
mutate( ic=se * qt((1-0.05)/2 + .5, n-1))
# Standard deviation
ggplot(alignmentNewsComments) +
geom_bar( aes(x=number_comment, y=mean), stat="identity", fill="forestgreen", alpha=0.5) +
geom_errorbar( aes(x=number_comment, ymin=mean-sd, ymax=mean+sd), width=0.4, colour="orange", alpha=0.9, size=1.5) +
ggtitle("using standard deviation")
alignmentNewsComments <- mongo("alignmentNewsComments", url = HOST_IP)$find() %>%
filter(!is.infinite(alignment)) %>% filter(number_comment < 11) %>%
drop_na()
alignmentNewsComments$number_comment <- as.factor(alignmentNewsComments$number_comment)
plot(alignmentNewsComments$number_comment, alignmentNewsComments$alignment,
main = "Alignment between News and Comments",
xlab = "number comment", ylab = "alignment",
pch = 19, frame = FALSE)
# Calculates mean, sd, se and IC
alignmentNewsComments <- alignmentNewsComments %>%
dplyr::group_by(number_comment) %>%
dplyr::mutate(
n=n(),
mean=mean(alignment),
sd=sd(alignment)
) %>%
mutate( se=sd/sqrt(n))  %>%
mutate( ic=se * qt((1-0.05)/2 + .5, n-1))
# Standard deviation
ggplot(alignmentNewsComments) +
geom_bar( aes(x=number_comment, y=mean), stat="identity", fill="forestgreen", alpha=0.5) +
geom_errorbar( aes(x=number_comment, ymin=mean-sd, ymax=mean+sd), width=0.4, colour="orange", alpha=0.9, size=1.5) +
ggtitle("using standard deviation")
# Standard Error
ggplot(alignmentNewsComments) +
geom_bar( aes(x=number_comment, y=mean), stat="identity", fill="forestgreen", alpha=0.5) +
geom_errorbar( aes(x=number_comment, ymin=mean-se, ymax=mean+se), width=0.4, colour="orange", alpha=0.9, size=1.5) +
ggtitle("using standard error")
# Confidence Interval
ggplot(alignmentNewsComments) +
geom_bar( aes(x=number_comment, y=mean), stat="identity", fill="forestgreen", alpha=0.5) +
geom_errorbar( aes(x=number_comment, ymin=mean-ic, ymax=mean+ic), width=0.4, colour="orange", alpha=0.9, size=1.5) +
ggtitle("using confidence interval")
commentsAlignment <- mongo("commentsAlignment", url = HOST_IP)$find()  %>%
filter(!is.infinite(alignment)) %>%
drop_na()
plot(commentsAlignment$number_comment, commentsAlignment$alignment,
main = "Alignment between Comments",
xlab = "number comment", ylab = "alignment",
pch = 19, frame = FALSE)
View(commentsAlignment)
plot(commentsAlignment$comments, commentsAlignment$alignment,
main = "Alignment between Comments",
xlab = "number comment", ylab = "alignment",
pch = 19, frame = FALSE)
commentsAlignment <- mongo("commentsAlignment", url = HOST_IP)$find()  %>%
filter(!is.infinite(alignment)) %>%
drop_na()
plot(commentsAlignment$comments, commentsAlignment$alignment,
main = "Alignment between Comments",
xlab = "number comment", ylab = "alignment",
pch = 19, frame = FALSE)
commentsAlignment <- mongo("commentsAlignment", url = HOST_IP)$find()  %>%
filter(!is.infinite(alignment)) %>%
filter(alignment > 0) %>%
drop_na()
plot(commentsAlignment$comments, commentsAlignment$alignment,
main = "Alignment between Comments",
xlab = "number comment", ylab = "alignment",
pch = 19, frame = FALSE)
commentsAlignment <- mongo("commentsAlignment", url = HOST_IP)$find()  %>%
filter(!is.infinite(alignment)) %>%
filter(comments %in% c('1-2')) %>%
drop_na()
plot(commentsAlignment$comments, commentsAlignment$alignment,
main = "Alignment between Comments",
xlab = "number comment", ylab = "alignment",
pch = 19, frame = FALSE)
plot(commentsAlignment$comments, commentsAlignment$alignment,
main = "Alignment between Comments",
xlab = "number comment", ylab = "alignment",
pch = 19, frame = FALSE)
plot(commentsAlignment$comments, commentsAlignment$alignment,
main = "Alignment between Comments",
xlab = "number comment", ylab = "alignment",
pch = 19, frame = FALSE)
plot(commentsAlignment$comments, commentsAlignment$alignment,
main = "Alignment between Comments",
xlab = "number comment", ylab = "alignment",
pch = 19, frame = FALSE)
plot(commentsAlignment$comments, commentsAlignment$alignment,
main = "Alignment between Comments",
xlab = "number comment", ylab = "alignment",
pch = 19, frame = FALSE)
plot(commentsAlignment$comments, commentsAlignment$alignment,
main = "Alignment between Comments",
xlab = "number comment", ylab = "alignment",
pch = 19, frame = FALSE)
plot(commentsAlignment$comments, commentsAlignment$alignment,
main = "Alignment between Comments",
xlab = "number comment", ylab = "alignment",
pch = 19, frame = FALSE)
commentsAlignment <- mongo("commentsAlignment", url = HOST_IP)$find()  %>%
filter(!is.infinite(alignment)) %>%
filter(comments %in% c('1-2')) %>%
filter(alignment > 0)
drop_na()
commentsAlignment <- mongo("commentsAlignment", url = HOST_IP)$find()  %>%
filter(!is.infinite(alignment)) %>%
filter(comments %in% c('1-2')) %>%
filter(alignment > 0) %>%
drop_na()
plot(commentsAlignment$comments, commentsAlignment$alignment,
main = "Alignment between Comments",
xlab = "number comment", ylab = "alignment",
pch = 19, frame = FALSE)
commentsAlignment <- mongo("commentsAlignment", url = HOST_IP)$find()  %>%
filter(!is.infinite(alignment)) %>%
filter(comments %in% c('1-2')) %>%
filter(alignment > 0) %>%
drop_na()
commentsAlignment$comments <- as.factor(commentsAlignment$comments)
plot(commentsAlignment$comments, commentsAlignment$alignment,
main = "Alignment between Comments",
xlab = "number comment", ylab = "alignment",
pch = 19, frame = FALSE)
commentsAlignment <- mongo("commentsAlignment", url = HOST_IP)$find()  %>%
filter(!is.infinite(alignment)) %>%
#filter(comments %in% c('1-2')) %>%
filter(alignment > 0) %>%
drop_na()
commentsAlignment$comments <- as.factor(commentsAlignment$comments)
plot(commentsAlignment$comments, commentsAlignment$alignment,
main = "Alignment between Comments",
xlab = "number comment", ylab = "alignment",
pch = 19, frame = FALSE)
commentsAlignment <- mongo("commentsAlignment", url = HOST_IP)$find()  %>%
filter(!is.infinite(alignment)) %>%
filter(comments %in% c('1-2')) %>%
#filter(alignment > 0) %>%
drop_na()
commentsAlignment$comments <- as.factor(commentsAlignment$comments)
plot(commentsAlignment$comments, commentsAlignment$alignment,
main = "Alignment between Comments",
xlab = "number comment", ylab = "alignment",
pch = 19, frame = FALSE)
commentsAlignment <- mongo("commentsAlignment", url = HOST_IP)$find()  %>%
filter(!is.infinite(alignment)) %>%
filter(comments %in% c('1-2', '2-3', '3-4', '4-5', '5-6', '7-8', '8-9', '9-10')) %>%
#filter(alignment > 0) %>%
drop_na()
commentsAlignment$comments <- as.factor(commentsAlignment$comments)
plot(commentsAlignment$comments, commentsAlignment$alignment,
main = "Alignment between Comments",
xlab = "number comment", ylab = "alignment",
pch = 19, frame = FALSE)
options(warn=-1) # ignore warns
require(GGally, quietly = TRUE)
require(reshape2, quietly = TRUE)
require(tidyverse, quietly = TRUE, warn.conflicts = FALSE)
library(ggfortify)
library(cluster)
library(broom)
library(tidyverse)
library(plotly)
library(resample)
library(lubridate)
library(ggpubr)
library(here)
library(highcharter)
library(mongolite)
library(dplyr)
HOST_IP = "mongodb://192.168.1.7:27017/news_2018"
alignmentNewsComments <- mongo("alignmentNewsComments", url = HOST_IP)$find() %>%
filter(!is.infinite(alignment)) %>% filter(number_comment < 11) %>%
drop_na()
alignmentNewsComments$number_comment <- as.factor(alignmentNewsComments$number_comment)
plot(alignmentNewsComments$number_comment, alignmentNewsComments$alignment,
main = "Alignment between News and Comments",
xlab = "number comment", ylab = "alignment",
pch = 19, frame = FALSE)
commentsAlignment <- mongo("commentsAlignment", url = HOST_IP)$find()  %>%
filter(!is.infinite(alignment)) %>%
filter(comments %in% c('1-2', '2-3', '3-4', '4-5', '5-6', '7-8', '8-9', '9-10')) %>%
drop_na()
commentsAlignment$comments <- as.factor(commentsAlignment$comments)
plot(commentsAlignment$comments, commentsAlignment$alignment,
main = "Alignment between Comments",
xlab = "comments", ylab = "alignment",
pch = 19, frame = FALSE)
options(warn=-1) # ignore warns
require(GGally, quietly = TRUE)
require(reshape2, quietly = TRUE)
require(tidyverse, quietly = TRUE, warn.conflicts = FALSE)
library(ggfortify)
library(cluster)
library(broom)
library(tidyverse)
library(plotly)
library(resample)
library(lubridate)
library(ggpubr)
library(here)
library(highcharter)
library(mongolite)
library(dplyr)
HOST_IP = "mongodb://192.168.1.7:27017/news_2018"
alignmentNewsComments <- mongo("alignmentNewsComments", url = HOST_IP)$find() %>%
filter(!is.infinite(alignment)) %>% filter(number_comment < 11) %>%
drop_na()
alignmentNewsComments$number_comment <- as.factor(alignmentNewsComments$number_comment)
plot(alignmentNewsComments$number_comment, alignmentNewsComments$alignment,
main = "Alignment between News and Comments",
xlab = "number comment", ylab = "alignment",
pch = 19, frame = FALSE)
commentsAlignment <- mongo("commentsAlignment", url = HOST_IP)$find()  %>%
filter(!is.infinite(alignment)) %>%
filter(comments %in% c('1-2', '2-3', '3-4', '4-5', '5-6', '7-8', '8-9', '9-10')) %>%
drop_na()
commentsAlignment$comments <- as.factor(commentsAlignment$comments)
plot(commentsAlignment$comments, commentsAlignment$alignment,
main = "Alignment between Comments",
xlab = "comments", ylab = "alignment",
pch = 19, frame = FALSE)
alignmentNewsComments <- mongo("alignmentNewsComments", url = HOST_IP)$find() %>%
filter(!is.infinite(alignment)) %>% filter(number_comment < 21) %>%
drop_na()
alignmentNewsComments$number_comment <- as.factor(alignmentNewsComments$number_comment)
plot(alignmentNewsComments$number_comment, alignmentNewsComments$alignment,
main = "Alignment between News and Comments",
xlab = "number comment", ylab = "alignment",
pch = 19, frame = FALSE)
alignmentNewsComments <- mongo("alignmentNewsComments", url = HOST_IP)$find() %>%
filter(!is.infinite(alignment)) %>% filter(number_comment <= 20) %>%
drop_na()
alignmentNewsComments$number_comment <- as.factor(alignmentNewsComments$number_comment)
plot(alignmentNewsComments$number_comment, alignmentNewsComments$alignment,
main = "Alignment between News and Comments",
xlab = "number comment", ylab = "alignment",
pch = 19, frame = FALSE)
alignmentNewsComments <- mongo("alignmentNewsComments", url = HOST_IP)$find() %>%
filter(!is.infinite(alignment)) %>% filter(number_comment <= 15) %>%
drop_na()
alignmentNewsComments$number_comment <- as.factor(alignmentNewsComments$number_comment)
plot(alignmentNewsComments$number_comment, alignmentNewsComments$alignment,
main = "Alignment between News and Comments",
xlab = "number comment", ylab = "alignment",
pch = 19, frame = FALSE)
options(warn=-1) # ignore warns
require(GGally, quietly = TRUE)
require(reshape2, quietly = TRUE)
require(tidyverse, quietly = TRUE, warn.conflicts = FALSE)
library(ggfortify)
library(cluster)
library(broom)
library(tidyverse)
library(plotly)
library(resample)
library(lubridate)
library(ggpubr)
library(here)
library(highcharter)
library(mongolite)
library(dplyr)
HOST_IP = "mongodb://192.168.1.7:27017/news_2018"
alignmentNewsComments <- mongo("alignmentNewsComments", url = HOST_IP)$find() %>%
filter(!is.infinite(alignment)) %>% filter(number_comment <= 15) %>%
drop_na()
alignmentNewsComments$number_comment <- as.factor(alignmentNewsComments$number_comment)
plot(alignmentNewsComments$number_comment, alignmentNewsComments$alignment,
main = "Alignment between News and Comments",
xlab = "number comment", ylab = "alignment",
pch = 19, frame = FALSE)
commentsAlignment <- mongo("commentsAlignment", url = HOST_IP)$find()  %>%
filter(!is.infinite(alignment)) %>%
filter(comments %in% c('1-2', '2-3', '3-4', '4-5', '5-6', '7-8', '8-9', '9-10', '10-11', '11-12', '12-13', '13-14', '14-15')) %>%
drop_na()
commentsAlignment$comments <- as.factor(commentsAlignment$comments)
plot(commentsAlignment$comments, commentsAlignment$alignment,
main = "Alignment between Comments",
xlab = "comments", ylab = "alignment",
pch = 19, frame = FALSE)
commentsAlignment <- mongo("commentsAlignment", url = HOST_IP)$find()  %>%
filter(!is.infinite(alignment)) %>%
filter(comments %in% c('1-2', '2-3', '3-4', '4-5', '5-6', '7-8', '8-9', '9-10')) %>%
drop_na()
commentsAlignment$comments <- as.factor(commentsAlignment$comments)
options(warn=-1) # ignore warns
require(GGally, quietly = TRUE)
require(reshape2, quietly = TRUE)
require(tidyverse, quietly = TRUE, warn.conflicts = FALSE)
library(ggfortify)
library(cluster)
library(broom)
library(tidyverse)
library(plotly)
library(resample)
library(lubridate)
library(ggpubr)
library(here)
library(highcharter)
library(mongolite)
library(dplyr)
HOST_IP = "mongodb://192.168.1.7:27017/news_2018"
alignmentNewsComments <- mongo("alignmentNewsComments", url = HOST_IP)$find() %>%
filter(!is.infinite(alignment)) %>% filter(number_comment <= 15) %>%
drop_na()
alignmentNewsComments$number_comment <- as.factor(alignmentNewsComments$number_comment)
plot(alignmentNewsComments$number_comment, alignmentNewsComments$alignment,
main = "Alignment between News and Comments",
xlab = "number comment", ylab = "alignment",
pch = 19, frame = FALSE)
commentsAlignment <- mongo("commentsAlignment", url = HOST_IP)$find()  %>%
filter(!is.infinite(alignment)) %>%
filter(comments %in% c('1-2', '2-3', '3-4', '4-5', '5-6', '7-8', '8-9', '9-10')) %>%
drop_na()
commentsAlignment$comments <- as.factor(commentsAlignment$comments)
plot(commentsAlignment$comments, commentsAlignment$alignment,
main = "Alignment between Comments",
xlab = "comments", ylab = "alignment",
pch = 19, frame = FALSE)
options(warn=-1) # ignore warns
require(GGally, quietly = TRUE)
require(reshape2, quietly = TRUE)
require(tidyverse, quietly = TRUE, warn.conflicts = FALSE)
library(ggfortify)
library(cluster)
library(broom)
library(tidyverse)
library(plotly)
library(resample)
library(lubridate)
library(ggpubr)
library(here)
library(highcharter)
library(mongolite)
library(dplyr)
HOST_IP = "mongodb://192.168.1.7:27017/news_2018"
alignmentNewsComments <- mongo("alignmentNewsComments", url = HOST_IP)$find() %>%
filter(!is.infinite(alignment)) %>% filter(number_comment <= 15) %>%
drop_na()
alignmentNewsComments$number_comment <- as.factor(alignmentNewsComments$number_comment)
plot(alignmentNewsComments$number_comment, alignmentNewsComments$alignment,
main = "Alignment between News and Comments",
xlab = "number comment", ylab = "alignment",
pch = 19, frame = FALSE)
commentsAlignment <- mongo("commentsAlignment", url = HOST_IP)$find()  %>%
filter(!is.infinite(alignment)) %>%
filter(comments %in% c('1-2', '2-3', '3-4', '4-5', '5-6', '6-7', '7-8', '8-9', '9-10')) %>%
drop_na()
commentsAlignment$comments <- as.factor(commentsAlignment$comments)
plot(commentsAlignment$comments, commentsAlignment$alignment,
main = "Alignment between Comments",
xlab = "comments", ylab = "alignment",
pch = 19, frame = FALSE)
options(warn=-1) # ignore warns
require(GGally, quietly = TRUE)
require(reshape2, quietly = TRUE)
require(tidyverse, quietly = TRUE, warn.conflicts = FALSE)
library(ggfortify)
library(cluster)
library(broom)
library(tidyverse)
library(plotly)
library(resample)
library(lubridate)
library(ggpubr)
library(here)
library(highcharter)
library(mongolite)
library(dplyr)
HOST_IP = "mongodb://192.168.1.7:27017/news_2018"
alignmentNewsComments <- mongo("alignmentNewsComments", url = HOST_IP)$find() %>%
filter(!is.infinite(alignment)) %>% filter(number_comment <= 15) %>%
drop_na()
alignmentNewsComments$number_comment <- as.factor(alignmentNewsComments$number_comment)
plot(alignmentNewsComments$number_comment, alignmentNewsComments$alignment,
main = "Alignment between News and Comments",
xlab = "number comment", ylab = "alignment",
pch = 19, frame = FALSE)
commentsAlignment <- mongo("commentsAlignment", url = HOST_IP)$find()  %>%
filter(!is.infinite(alignment)) %>%
filter(comments %in% c('1-2', '2-3', '3-4', '4-5', '5-6', '6-7', '7-8', '8-9', '9-10')) %>%
drop_na()
commentsAlignment$comments <- as.factor(commentsAlignment$comments)
plot(commentsAlignment$comments, commentsAlignment$alignment,
main = "Alignment between Comments",
xlab = "comments", ylab = "alignment",
pch = 19, frame = FALSE)
options(warn=-1) # ignore warns
require(GGally, quietly = TRUE)
require(reshape2, quietly = TRUE)
require(tidyverse, quietly = TRUE, warn.conflicts = FALSE)
library(ggfortify)
library(cluster)
library(broom)
library(tidyverse)
library(plotly)
library(resample)
library(lubridate)
library(ggpubr)
library(here)
library(highcharter)
library(mongolite)
library(dplyr)
HOST_IP = "mongodb://192.168.1.6:27017/news_2018"
alignmentNewsComments <- mongo("alignmentNewsComments", url = HOST_IP)$find() %>%
filter(!is.infinite(alignment)) %>% filter(number_comment <= 15) %>%
drop_na()
options(warn=-1) # ignore warns
require(GGally, quietly = TRUE)
require(reshape2, quietly = TRUE)
require(tidyverse, quietly = TRUE, warn.conflicts = FALSE)
library(ggfortify)
library(cluster)
library(broom)
library(tidyverse)
library(plotly)
library(resample)
library(lubridate)
library(ggpubr)
library(here)
library(highcharter)
library(mongolite)
HOST_IP = "mongodb://192.168.1.6:27017/news_2018"
carta_capital <- mongo("carta_capital", url = HOST_IP)$find() %>% filter(arg >= 0, sen >= 0, val >= 0, pre >= 0, mod >= 0)
el_pais <- mongo("el_pais", url = HOST_IP)$find() %>% filter(arg >= 0, sen >= 0, val >= 0, pre >= 0, mod >= 0)
estadao <- mongo("estadao", url = HOST_IP)$find() %>% filter(arg >= 0, sen >= 0, val >= 0, pre >= 0, mod >= 0)
folha <- mongo("folha", url = HOST_IP)$find() %>% filter(arg >= 0, sen >= 0, val >= 0, pre >= 0, mod >= 0)
#gazeta_do_povo <- mongo("gazeta_do_povo", url = HOST_IP)$find() %>% filter(arg >= 0, sen >= 0, val >= 0, pre >= 0, mod >= 0)
oantagonista <- mongo("oantagonista", url = HOST_IP)$find() %>% filter(arg >= 0, sen >= 0, val >= 0, pre >= 0, mod >= 0)
oglobo <- mongo("oglobo", url = HOST_IP)$find() %>% filter(arg >= 0, sen >= 0, val >= 0, pre >= 0, mod >= 0)
veja <- mongo("veja", url = HOST_IP)$find() %>% filter(arg >= 0, sen >= 0, val >= 0, pre >= 0, mod >= 0)
carta_capital$date <- as.numeric(as.character(carta_capital$date))
el_pais$date <- as.numeric(as.character(el_pais$date))
estadao$date <- as.numeric(as.character(estadao$date))
folha$date <- as.numeric(as.character(folha$date))
#gazeta_do_povo$date <- as.numeric(as.character(gazeta_do_povo$date))
oantagonista$date <- as.numeric(as.character(oantagonista$date))
oglobo$date <- as.numeric(as.character(oglobo$date))
veja$date <- as.numeric(as.character(veja$date))
el_pais[el_pais == "internacional"]<-"politica"
oglobo[oglobo == "internacional"]<-"politica"
oglobo[oglobo == "economia"]<-"esporte"
oantagonista[oantagonista == "diversos"]<-"politica"
oantagonista[oantagonista == "tecnologia"]<-"esporte"
esporte <-bind_rows(
"Carta Capital" = carta_capital %>% filter(section == 'esporte'),
"El País" = el_pais %>% filter(section == 'esporte'),
"Estadão" = estadao %>% filter(section =='esporte'),
"Folha de SP" = folha %>% filter(section == 'esporte'),
#"gazeta_do_povo" = gazeta_do_povo,
"O Antagonista" = oantagonista %>% filter(section == 'esporte'),
"O Globo" = oglobo %>% filter(section == 'esporte'),
"Veja" = veja %>% filter(section == 'esporte'),
.id = "jornal")
politica <-bind_rows(
"Carta Capital" = carta_capital %>% filter(section == 'politica'),
"El País" = el_pais %>% filter(section == 'politica'),
"Estadão" = estadao %>% filter(section =='politica'),
"Folha de SP" = folha %>% filter(section == 'politica'),
#"gazeta_do_povo" = gazeta_do_povo,
"O Antagonista" = oantagonista %>% filter(section == 'politica'),
"O Globo" = oglobo %>% filter(section == 'politica'),
"Veja" = veja %>% filter(section == 'politica'),
.id = "jornal")
View(esporte)
# definindo portal para população
pop <- politica %>%
mutate(bias_news = (1 - (arg + sen + val + pre + mod) / 5)) %>%
mutate(type_news = ifelse(grepl("eleiç", tolower(text)), "election", "non_election")) %>%
filter(!is.na(type_news))
View(pop)
pop.describe()
describe(pop)
library(Hmisc)
install.packages("Hmisc")
library(Hmisc)
describe(pop)
