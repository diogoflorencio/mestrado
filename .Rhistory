axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
qp2
ggsave("fig3.pdf", width = 6, height = 4)
carta_len <- readabilityMetrics %>%
filter(jornal == "carta_capital") %>%
bootstrap(cor(bias_news, words, method = "spearman"),
R = resamples) %>%
CI.percentile(probs = c(.025, .975))
elpais_len <- readabilityMetrics %>%
filter(jornal == "el_pais") %>%
bootstrap(cor(bias_news, words, method = "spearman"),
R = resamples) %>%
CI.percentile(probs = c(.025, .975))
estadao_len <- readabilityMetrics %>%
filter(jornal == "estadao") %>%
bootstrap(cor(bias_news, words, method = "spearman"),
R = resamples) %>%
CI.percentile(probs = c(.025, .975))
folha_len <- readabilityMetrics %>%
filter(jornal == "folha") %>%
bootstrap(cor(bias_news, words, method = "spearman"),
R = resamples) %>%
CI.percentile(probs = c(.025, .975))
gazeta_len <- readabilityMetrics %>%
filter(jornal == "gazeta_do_povo") %>%
bootstrap(cor(bias_news, words, method = "spearman"),
R = resamples) %>%
CI.percentile(probs = c(.025, .975))
carta_len <- readabilityMetrics %>%
filter(jornal == "carta_capital") %>%
bootstrap(cor(bias_news, words, method = "spearman"),
R = resamples) %>%
CI.percentile(probs = c(.025, .975))
elpais_len <- readabilityMetrics %>%
filter(jornal == "el_pais") %>%
bootstrap(cor(bias_news, words, method = "spearman"),
R = resamples) %>%
CI.percentile(probs = c(.025, .975))
estadao_len <- readabilityMetrics %>%
filter(jornal == "estadao") %>%
bootstrap(cor(bias_news, words, method = "spearman"),
R = resamples) %>%
CI.percentile(probs = c(.025, .975))
folha_len <- readabilityMetrics %>%
filter(jornal == "folha") %>%
bootstrap(cor(bias_news, words, method = "spearman"),
R = resamples) %>%
CI.percentile(probs = c(.025, .975))
#gazeta_len <- readabilityMetrics %>%
#  filter(jornal == "gazeta_do_povo") %>%
#  bootstrap(cor(bias_news, words, method = "spearman"),
#            R = resamples) %>%
#    CI.percentile(probs = c(.025, .975))
oantagonista_len <- readabilityMetrics %>%
filter(jornal == "oantagonista") %>%
bootstrap(cor(bias_news, words, method = "spearman"),
R = resamples) %>%
CI.percentile(probs = c(.025, .975))
oglobo_len <- readabilityMetrics %>%
filter(jornal == "oglobo") %>%
bootstrap(cor(bias_news, words, method = "spearman"),
R = resamples) %>%
CI.percentile(probs = c(.025, .975))
veja_len <- readabilityMetrics %>%
filter(jornal == "veja") %>%
bootstrap(cor(bias_news, words, method = "spearman"),
R = resamples) %>%
CI.percentile(probs = c(.025, .975))
subj_len = data.frame(rbind(carta_len, elpais_len, estadao_len, folha_len, oantagonista_len, oglobo_len, veja_len))
subj_len$portal = c("Carta Capital", "El Pais", "Estadão", "Folha de SP", "O Antagonista", "O Globo", "Veja")
qp3 <- subj_len %>%
ggplot(aes(x = portal, ymin = X2.5., ymax = X97.5., color = portal)) +
geom_errorbar(width = .8, size = .8) +
labs(#title = "Relação entre  subjetividade e tamanho da notícia",
#subtitle = "Estimativa de correlação entre subjetividade e legibilidade considerando um ano de coleta",
x = "",
y = "") +
theme_bw() +
theme(legend.position="none", axis.text=element_text(size=14),
plot.title = element_text(size=18)
) + coord_flip()
qp3
ggsave("fig4.pdf", width = 6, height = 4)
estadao_pop <- readabilityMetrics %>%
filter(jornal == "estadao" | jornal == "oglobo") %>%
bootstrap(cor(bias_news, number_comments, method = "spearman"),
R = resamples) %>%
CI.percentile(probs = c(.025, .975))
folha_pop <- readabilityMetrics %>%
filter(jornal == "folha" | jornal == "oglobo") %>%
bootstrap(cor(bias_news, number_comments, method = "spearman"),
R = resamples) %>%
CI.percentile(probs = c(.025, .975))
oantagonista_pop <- readabilityMetrics %>%
filter(jornal == "oantagonista") %>%
bootstrap(cor(bias_news, number_comments, method = "spearman"),
R = resamples) %>%
CI.percentile(probs = c(.025, .975))
oglobo_pop <- readabilityMetrics %>%
filter(jornal == "oglobo") %>%
bootstrap(cor(bias_news, number_comments, method = "spearman"),
R = resamples) %>%
CI.percentile(probs = c(.025, .975))
veja_pop <- readabilityMetrics %>%
filter(jornal == "veja") %>%
bootstrap(cor(bias_news, number_comments, method = "spearman"),
R = resamples) %>%
CI.percentile(probs = c(.025, .975))
bias_pop = data.frame(rbind(estadao_pop, folha_pop, oantagonista_pop, oglobo_pop, veja_pop))
bias_pop$portal = c("Estadão", "Folha", "OAntagonista", "O Globo", "Veja")
qp4 <- bias_pop %>%
ggplot(aes(x = portal, ymin = X2.5., ymax = X97.5., color=portal)) +
geom_errorbar(width = .8, size = .8) +
labs(#title = "Relação entre subjetividade e popularidade",
#subtitle = "Correlação entre o tamanho da notícia e sua popularidade",
x = "",
y = "") +
theme_bw() +
theme(legend.position="none",
axis.text=element_text(size=13.5),
plot.title = element_text(size=18)) +
scale_y_continuous(limits = c(-.06, .1))
qp4
ggsave("fig5.pdf", width = 6, height = 4)
bias_section <- news %>%
mutate(month = month(as_datetime(as.numeric(date)))) %>%
group_by(month, section) %>%
summarise(bias = (1 - (mean(arg) + mean(sen) + mean(val) + mean(pre) + mean(mod)) / 5) * 100)
a <- highchart() %>%
#hc_title(text = " Section bias distribution by month") %>%
hc_xAxis(categories = c("jan", "fev", "mar", "abr", "mai", "jun", "jul", "ago", "set", "out", "nov", "dez")) %>%
hc_yAxis(#title = list(text = "percentage of bias"),
labels = list(format = "{value}%"), max = 80) %>%
#hc_tooltip(pointFormat = "{point.y}%") %>%
hc_add_series(name = "diversos" , data = (bias_section %>% filter(section == "diversos"))$bias) %>%
hc_add_series(name = "economia" , data = (bias_section %>% filter(section == "economia"))$bias) %>%
hc_add_series(name = "educacao" , data = (bias_section %>% filter(section == "educacao"))$bias) %>%
hc_add_series(name = "esporte" , data = (bias_section %>% filter(section == "esporte"))$bias) %>%
hc_add_series(name = "internacional" , data = (bias_section %>% filter(section == "internacional"))$bias) %>%
hc_add_series(name = "opiniao" , data = (bias_section %>% filter(section == "opiniao"))$bias) %>%
hc_add_series(name = "politica" , data = (bias_section %>% filter(section == "politica"))$bias) %>%
hc_add_series(name = "tecnologia" , data = (bias_section %>% filter(section == "tecnologia"))$bias)
a
#ggsave(a, "fig6.pdf", width = 12, height = 4)
a %>% hc_exporting(enabled = TRUE, filename = "fig6")
bias_section <- news %>%
mutate(month = month(as_datetime(as.numeric(date)))) %>%
group_by(month, section) %>%
summarise(bias = (1 - (mean(arg) + mean(sen) + mean(val) + mean(pre) + mean(mod)) / 5) * 100)
a <- highchart() %>%
#hc_title(text = " Section bias distribution by month") %>%
hc_xAxis(categories = c("jan", "fev", "mar", "abr", "mai", "jun", "jul", "ago", "set", "out", "nov", "dez")) %>%
hc_yAxis(#title = list(text = "percentage of bias"),
labels = list(format = "{value}%"), max = 80) %>%
hc_tooltip(pointFormat = "{point.y}%") %>%
#hc_add_series(name = "diversos" , data = (bias_section %>% filter(section == "diversos"))$bias) %>%
hc_add_series(name = "economia" , data = (bias_section %>% filter(section == "economia"))$bias) %>%
hc_add_series(name = "educacao" , data = (bias_section %>% filter(section == "educacao"))$bias) %>%
hc_add_series(name = "esporte" , data = (bias_section %>% filter(section == "esporte"))$bias) %>%
hc_add_series(name = "internacional" , data = (bias_section %>% filter(section == "internacional"))$bias) %>%
hc_add_series(name = "opiniao" , data = (bias_section %>% filter(section == "opiniao"))$bias) %>%
hc_add_series(name = "politica" , data = (bias_section %>% filter(section == "politica"))$bias) %>%
hc_add_series(name = "tecnologia" , data = (bias_section %>% filter(section == "tecnologia"))$bias)
a
#ggsave(a, "fig6.pdf", width = 12, height = 4)
a %>% hc_exporting(enabled = TRUE, filename = "fig6")
options(warn=-1) # ignore warns
require(GGally, quietly = TRUE)
require(reshape2, quietly = TRUE)
require(tidyverse, quietly = TRUE, warn.conflicts = FALSE)
library(ggfortify)
library(cluster)
library(broom)
library(tidyverse)
library(plotly)
library(resample)
library(lubridate)
library(ggpubr)
library(here)
library(highcharter)
library(mongolite)
HOST_IP = "mongodb://192.168.1.5:27017/news_2018"
carta_capital <- mongo("carta_capital", url = HOST_IP)$find() %>%
select(url, section, arg, sen, val, pre, mod) %>% filter(arg >= 0, sen >= 0, val >= 0, pre >= 0, mod >= 0)
el_pais <- mongo("el_pais", url = HOST_IP)$find() %>%
select(url, section, arg, sen, val, pre, mod) %>% filter(arg >= 0, sen >= 0, val >= 0, pre >= 0, mod >= 0)
estadao <- mongo("estadao", url = HOST_IP)$find() %>%
select(url, section, arg, sen, val, pre, mod) %>% filter(arg >= 0, sen >= 0, val >= 0, pre >= 0, mod >= 0)
folha <- mongo("folha", url = HOST_IP)$find() %>%
select(url, section, arg, sen, val, pre, mod) %>% filter(arg >= 0, sen >= 0, val >= 0, pre >= 0, mod >= 0)
oantagonista <- mongo("oantagonista", url = HOST_IP)$find() %>%
select(url, section, arg, sen, val, pre, mod) %>% filter(arg >= 0, sen >= 0, val >= 0, pre >= 0, mod >= 0)
oglobo <- mongo("oglobo", url = HOST_IP)$find() %>%
select(url, section, arg, sen, val, pre, mod) %>% filter(arg >= 0, sen >= 0, val >= 0, pre >= 0, mod >= 0)
veja <- mongo("veja", url = HOST_IP)$find() %>%
select(url, section, arg, sen, val, pre, mod) %>% filter(arg >= 0, sen >= 0, val >= 0, pre >= 0, mod >= 0)
set.seed(1212)
repeticoes = 5000 # pelo menos 2000, mas mais não faz mal.
um_bootstrap <- function(x){
opinativo <- x %>% filter(type_news == "opinativo") %>% pull(bias_news)
boot_opinativo <- sample(opinativo,           # amostre dos dados
size = NROW(opinativo), # tamanho igual ao recebido
replace = TRUE) # aqui é o bootstrap
informativo <- x %>% filter(type_news == "informativo") %>% pull(bias_news)
boot_informativo <- sample(informativo,           # amostre dos dados
size = NROW(informativo), # tamanho igual ao recebido
replace = TRUE) # aqui é o bootstrap
return(mean(boot_opinativo) - mean(boot_informativo))
}
# definindo portal para população
pop <- carta_capital %>%
mutate(bias_news = (1 - (arg + sen + val + pre + mod) / 5)) %>%
mutate(type_news = ifelse(section%in%c("politica", "internacional", "economia", "opiniao"), "opinativo", "informativo")) %>%
filter(!is.na(type_news))
theta_c = pop %>% group_by(type_news) %>%
summarise(media = mean(bias_news))
theta_c = theta_c %>% filter(type_news == "opinativo") %>% pull(media) - theta_c %>% filter(type_news == "informativo") %>% pull(media)
# A REAMOSTRAGEM
reamostragens = tibble(i = 1:repeticoes) %>%
mutate(theta_c_s = map_dbl(i, ~ um_bootstrap(pop)))
ci_carta = reamostragens %>%
summarise(conf.low = theta_c + quantile((theta_c_s - theta_c), .05),
conf.high = theta_c + quantile((theta_c_s - theta_c), .95),
statistic = theta_c)
# definindo portal para população
pop <- el_pais %>%
mutate(bias_news = (1 - (arg + sen + val + pre + mod) / 5)) %>%
mutate(type_news = ifelse(section%in%c("politica", "internacional", "economia", "opiniao"), "informativo", "opinativo")) %>%
filter(!is.na(type_news))
theta_c = pop %>% group_by(type_news) %>%
summarise(media = mean(bias_news))
theta_c = theta_c %>% filter(type_news == "opinativo") %>% pull(media) - theta_c %>% filter(type_news == "informativo") %>% pull(media)
# A REAMOSTRAGEM
reamostragens = tibble(i = 1:repeticoes) %>%
mutate(theta_c_s = map_dbl(i, ~ um_bootstrap(pop)))
ci_elpais = reamostragens %>%
summarise(conf.low = theta_c + quantile((theta_c_s - theta_c), .05),
conf.high = theta_c + quantile((theta_c_s - theta_c), .95),
statistic = theta_c)
# definindo portal para população
pop <- estadao %>%
mutate(bias_news = (1 - (arg + sen + val + pre + mod) / 5)) %>%
mutate(type_news = ifelse(section%in%c("politica", "internacional", "economia", "opiniao"), "opinativo", "informativo")) %>%
filter(!is.na(type_news))
theta_c = pop %>% group_by(type_news) %>%
summarise(media = mean(bias_news))
theta_c = theta_c %>% filter(type_news == "opinativo") %>% pull(media) - theta_c %>% filter(type_news == "informativo") %>% pull(media)
# A REAMOSTRAGEM
reamostragens = tibble(i = 1:repeticoes) %>%
mutate(theta_c_s = map_dbl(i, ~ um_bootstrap(pop)))
ci_estadao = reamostragens %>%
summarise(conf.low = theta_c + quantile((theta_c_s - theta_c), .05),
conf.high = theta_c + quantile((theta_c_s - theta_c), .95),
statistic = theta_c)
# definindo portal para população
pop <- folha %>%
mutate(bias_news = (1 - (arg + sen + val + pre + mod) / 5)) %>%
mutate(type_news = ifelse(section%in%c("politica", "internacional", "economia", "opiniao"), "opinativo", "informativo")) %>%
filter(!is.na(type_news))
theta_c = pop %>% group_by(type_news) %>%
summarise(media = mean(bias_news))
theta_c = theta_c %>% filter(type_news == "opinativo") %>% pull(media) - theta_c %>% filter(type_news == "informativo") %>% pull(media)
# A REAMOSTRAGEM
reamostragens = tibble(i = 1:repeticoes) %>%
mutate(theta_c_s = map_dbl(i, ~ um_bootstrap(pop)))
ci_folha = reamostragens %>%
summarise(conf.low = theta_c + quantile((theta_c_s - theta_c), .05),
conf.high = theta_c + quantile((theta_c_s - theta_c), .95),
statistic = theta_c)
# definindo portal para população
#pop <- gazeta_do_povo %>%
#  mutate(bias_news = (1 - (arg + sen + val + pre + mod) / 5)) %>%
#  mutate(type_news = ifelse(section%in%c("politica", "internacional", "economia", "opiniao"), "opinativo", "informativo")) %>%
#  filter(!is.na(type_news))
#theta_c = pop %>% group_by(type_news) %>%
#        summarise(media = mean(bias_news))
#theta_c = theta_c %>% filter(type_news == "opinativo") %>% pull(media) - theta_c %>% filter(type_news == "informativo") %>% pull(media)
# A REAMOSTRAGEM
#reamostragens = tibble(i = 1:repeticoes) %>%
#  mutate(theta_c_s = map_dbl(i, ~ um_bootstrap(pop)))
#ci_gazeta = reamostragens %>%
#  summarise(conf.low = theta_c + quantile((theta_c_s - theta_c), .05),
#         conf.high = theta_c + quantile((theta_c_s - theta_c), .95),
#         statistic = theta_c)
# definindo portal para população
pop <- oantagonista %>%
mutate(bias_news = (1 - (arg + sen + val + pre + mod) / 5)) %>%
mutate(type_news = ifelse(section%in%c("politica", "internacional", "economia", "opiniao"), "opinativo", "informativo")) %>%
filter(!is.na(type_news))
theta_c = pop %>% group_by(type_news) %>%
summarise(media = mean(bias_news))
theta_c = theta_c %>% filter(type_news == "opinativo") %>% pull(media) - theta_c %>% filter(type_news == "informativo") %>% pull(media)
# A REAMOSTRAGEM
reamostragens = tibble(i = 1:repeticoes) %>%
mutate(theta_c_s = map_dbl(i, ~ um_bootstrap(pop)))
ci_oantagonista = reamostragens %>%
summarise(conf.low = theta_c + quantile((theta_c_s - theta_c), .05),
conf.high = theta_c + quantile((theta_c_s - theta_c), .95),
statistic = theta_c)
# definindo portal para população
pop <- oglobo %>%
mutate(bias_news = (1 - (arg + sen + val + pre + mod) / 5)) %>%
mutate(type_news = ifelse(section%in%c("politica", "internacional", "economia", "opiniao", "brasil", "mundo"),"informativo", "opinativo")) %>%
filter(!is.na(type_news))
theta_c = pop %>% group_by(type_news) %>%
summarise(media = mean(bias_news))
theta_c = theta_c %>% filter(type_news == "opinativo") %>% pull(media) - theta_c %>% filter(type_news == "informativo") %>% pull(media)
# A REAMOSTRAGEM
reamostragens = tibble(i = 1:repeticoes) %>%
mutate(theta_c_s = map_dbl(i, ~ um_bootstrap(pop)))
ci_oglobo = reamostragens %>%
summarise(conf.low = theta_c + quantile((theta_c_s - theta_c), .05),
conf.high = theta_c + quantile((theta_c_s - theta_c), .95),
statistic = theta_c)
# definindo portal para população
pop <- veja %>%
mutate(bias_news = (1 - (arg + sen + val + pre + mod) / 5)) %>%
mutate(type_news = ifelse(section%in%c("politica", "internacional", "economia", "opiniao"), "opinativo", "informativo")) %>%
filter(!is.na(type_news))
theta_c = pop %>% group_by(type_news) %>%
summarise(media = mean(bias_news))
theta_c = theta_c %>% filter(type_news == "opinativo") %>% pull(media) - theta_c %>% filter(type_news == "informativo") %>% pull(media)
# A REAMOSTRAGEM
reamostragens = tibble(i = 1:repeticoes) %>%
mutate(theta_c_s = map_dbl(i, ~ um_bootstrap(pop)))
ci_veja = reamostragens %>%
summarise(conf.low = theta_c + quantile((theta_c_s - theta_c), .05),
conf.high = theta_c + quantile((theta_c_s - theta_c), .95),
statistic = theta_c)
ci_portais = data.frame(rbind(ci_carta, ci_elpais, ci_estadao, ci_folha, ci_gazeta, ci_oantagonista, ci_oglobo, ci_veja))
ci_portais = data.frame(rbind(ci_carta, ci_elpais, ci_estadao, ci_folha, ci_oantagonista, ci_oglobo, ci_veja))
ci_portais$portal = c("carta_capital", "el_pais", "estadao", "folha", "oantagonista", "oglobo", "veja")
a <- ci_portais %>%
ggplot(aes(x = portal, ymin = conf.low, ymax = conf.high, color =  portal)) +
geom_errorbar(width = .8, size=.8) +
labs(#title = "Diferença média de subjetividade",
#       subtitle = "Estimativa da diferença média entre notícias opinativas e informativas",
x = "",
y = "") +
scale_y_continuous(labels = scales::percent) +
theme(legend.position = "none") +
theme_bw() +
theme(legend.position="none",
axis.text=element_text(size=14)) +
coord_flip()
a
#ggsave("validacao.pdf", width = 6, height = 4)
ggsave("fig0.pdf", width = 6, height = 4)
pos_pol <- bind_rows(
"defined" = carta_capital,
"undefined" = el_pais,
"undefined" = estadao,
"undefined" = folha,
#"indefinido" = gazeta_do_povo,
"defined" = oantagonista,
"undefined" = oglobo,
"defined" = veja,
.id = "posicionamento_politico") %>%
mutate(bias_news = (1 - (arg + sen + val + pre + mod) / 5)) %>%
select(posicionamento_politico, bias_news)
resamples = 2000
subj_def <- pos_pol %>%
filter(posicionamento_politico == "definido") %>%
bootstrap(median(bias_news),
R = resamples) %>%
CI.percentile(probs = c(.025, .975))
pos_pol <- bind_rows(
"defined" = carta_capital,
"undefined" = el_pais,
"undefined" = estadao,
"undefined" = folha,
#"indefinido" = gazeta_do_povo,
"defined" = oantagonista,
"undefined" = oglobo,
"defined" = veja,
.id = "posicionamento_politico") %>%
mutate(bias_news = (1 - (arg + sen + val + pre + mod) / 5)) %>%
select(posicionamento_politico, bias_news)
resamples = 2000
subj_def <- pos_pol %>%
filter(posicionamento_politico == "defined") %>%
bootstrap(median(bias_news),
R = resamples) %>%
CI.percentile(probs = c(.025, .975))
subj_indef <- pos_pol %>%
filter(posicionamento_politico == "undefined") %>%
bootstrap(median(bias_news),
R = resamples) %>%
CI.percentile(probs = c(.025, .975))
subj_ci = data.frame(rbind(subj_def, subj_indef))
subj_ci$jornal = c("defined", "undefined")
qp1 <- subj_ci %>%
ggplot(aes(x = jornal, ymin = X2.5., ymax = X97.5., color = jornal)) +
geom_errorbar(width = .5, size = .8) +
labs(#title = "Percentual de subjetividade por portal",
#subtitle = "Estimativa de subjetividade considerando todas as notícias de 2018",
x = "",
y = "") +
scale_y_continuous(labels = scales::percent) +
theme_bw() +
theme(legend.position="none",
axis.text=element_text(size=14),
plot.title = element_text(size=18)
)
qp1
#ggsave("pp1.png", width = 6, height = 4)
qp1 <- subj_ci %>%
ggplot(aes(x = jornal, ymin = X2.5., ymax = X97.5., color = jornal)) +
geom_errorbar(width = .5, size = .8) +
labs(#title = "Percentual de subjetividade por portal",
#subtitle = "Estimativa de subjetividade considerando todas as notícias de 2018",
x = "",
y = "") +
scale_y_continuous(labels = scales::percent) +
theme_bw() +
theme(legend.position="none",
axis.text=element_text(size=14),
plot.title = element_text(size=18)
)
qp1
ggsave("fig1.pdf", width = 6, height = 4)
pos_pol <- bind_rows(
"defined" = carta_capital,
"undefined" = el_pais,
"undefined" = estadao,
"undefined" = folha,
#"indefinido" = gazeta_do_povo,
"defined" = oantagonista,
"undefined" = oglobo,
"defined" = veja,
.id = "posicionamento_politico") %>%
mutate(bias_news = (1 - (arg + sen + val + pre + mod) / 5)) %>%
select(posicionamento_politico, bias_news)
resamples = 2000
subj_def <- pos_pol %>%
filter(posicionamento_politico == "defined") %>%
bootstrap(median(bias_news),
R = resamples) %>%
CI.percentile(probs = c(.025, .975))
subj_indef <- pos_pol %>%
filter(posicionamento_politico == "undefined") %>%
bootstrap(median(bias_news),
R = resamples) %>%
CI.percentile(probs = c(.025, .975))
subj_ci = data.frame(rbind(subj_def, subj_indef))
subj_ci$jornal = c("declared political position", "non-declared political position")
qp1 <- subj_ci %>%
ggplot(aes(x = jornal, ymin = X2.5., ymax = X97.5., color = jornal)) +
geom_errorbar(width = .5, size = .8) +
labs(#title = "Percentual de subjetividade por portal",
#subtitle = "Estimativa de subjetividade considerando todas as notícias de 2018",
x = "",
y = "") +
scale_y_continuous(labels = scales::percent) +
theme_bw() +
theme(legend.position="none",
axis.text=element_text(size=14),
plot.title = element_text(size=18)
)
qp1
ggsave("fig1.pdf", width = 6, height = 4)
qp1 <- subj_ci %>%
ggplot(aes(x = jornal, ymin = X2.5., ymax = X97.5., color = jornal)) +
geom_errorbar(width = .5, size = .8) +
labs(#title = "Percentual de subjetividade por portal",
#subtitle = "Estimativa de subjetividade considerando todas as notícias de 2018",
x = "",
y = "") +
scale_y_continuous(labels = scales::percent) +
theme_bw() +
theme(legend.position="none",
axis.text=element_text(size=14),
plot.title = element_text(size=18)
)
qp1
ggsave("fig1.pdf", width = 10, height = 4)
ci_portais = data.frame(rbind(ci_carta, ci_elpais, ci_estadao, ci_folha, ci_oantagonista, ci_oglobo, ci_veja))
ci_portais$portal = c("carta capital", "el pais", "estadao", "folha", "o antagonista", "o globo", "veja")
a  <- ci_portais %>%
ggplot(aes(x = portal, ymin = conf.low, ymax = conf.high, color =  portal)) +
geom_errorbar(width = .8, size=.8) +
labs(#title = "Diferença média de subjetividade",
#       subtitle = "Estimativa da diferença média entre notícias opinativas e informativas",
x = "",
y = "") +
scale_y_continuous(labels = scales::percent) +
theme(legend.position = "none") +
theme_bw() +
theme(legend.position="none",
axis.text=element_text(size=14)) +
coord_flip()
a
ggsave("fig0.pdf", width = 6, height = 4)
ci_portais = data.frame(rbind(ci_carta, ci_elpais, ci_estadao, ci_folha, ci_oantagonista, ci_oglobo, ci_veja))
ci_portais$portal = c("Carta Capital", "El Pais", "Estadão", "Folha de SP", "O Antagonista", "O Globo", "Veja")
a  <- ci_portais %>%
ggplot(aes(x = portal, ymin = conf.low, ymax = conf.high, color =  portal)) +
geom_errorbar(width = .8, size=.8) +
labs(#title = "Diferença média de subjetividade",
#       subtitle = "Estimativa da diferença média entre notícias opinativas e informativas",
x = "",
y = "") +
scale_y_continuous(labels = scales::percent) +
theme(legend.position = "none") +
theme_bw() +
theme(legend.position="none",
axis.text=element_text(size=14)) +
coord_flip()
a
ggsave("fig0.pdf", width = 6, height = 4)
